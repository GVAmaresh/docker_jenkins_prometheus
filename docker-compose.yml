version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build: ./server
    container_name: server
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - ./server/.env
    volumes:
      - ./server/logs:/app/logs
    restart: always

  client:
    build: ./client
    container_name: client
    ports:
      - "3000:3000"
    depends_on:
      - server
    volumes:
      - ./client/logs:/app/logs
    restart: always

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Jenkins to control Docker
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    # environment:
      # - GF_SECURITY_ADMIN_PASSWORD=admin  # Set initial Grafana password
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always

volumes:
  mongodb_data:
  jenkins_home:
  grafana_data:
